- name: Install zsh shell
  hosts: 127.0.0.1
  connection: local
  tags: zsh
  tasks:

  - name: Install packages
    apt: name=zsh state=present
    become: true

  - name: grep and register user_home
    shell: >
      egrep "^{{ ansible_user_id }}:" /etc/passwd | awk -F: '{ print $6 }'
    changed_when: false
    register: user_home

  - name: ensure the ~/src-hub directory is present
    file:
      path: "{{ user_home.stdout_lines }}/src-hub"
      state: directory

  - name: clone oh-my-zsh
    git:
      repo: https://github.com/robbyrussell/oh-my-zsh.git
      dest: "{{ user_home.stdout_lines }}/src-hub/oh-my-zsh"
      update: no

  - name: create symlink to oh-my-zsh
    file:
      path: "{{ user_home.stdout_lines }}/.oh-my-zsh"
      src: "{{ user_home.stdout_lines }}/src-hub/oh-my-zsh"
      state: link

  - name: check if .zshrc exists
    stat:
      path: "{{ user_home.stdout_lines }}/.zshrc"
    register: zshrc

  - name: back up existing .zshrc file if it exists
    when: zshrc.stat.exists
    copy:
      src: "{{ user_home.stdout_lines }}/.zshrc"
      dest: "{{ user_home.stdout_lines }}/.zshrc-orig"

  - name: Use your home in zshrc config
    replace:
      path: zsh_files/zshrc
      regexp: '\/home\/yourusername'
      replace: "{{ ansible_user_id }}"
      backup: yes

  - name: Use your username in zshrc config
    replace:
      path: zsh_files/zshrc
      regexp: 'yourusername'
      replace: "{{ ansible_user_id }}"
      backup: yes

  - name: copy zshrc to user home
    copy:
      src: zsh_files/zshrc
      dest: "{{ user_home.stdout_lines }}/.zshrc"
      force: yes

  - name: change user shell to zsh
    become: yes
    become_user: root
    command: chsh -s /bin/zsh "{{ ansible_user_id }}"

  - name: ensure the fonts directory is present
    file:
      path: "{{ user_home.stdout_lines }}/.local/share/fonts"
      mode: 0755
      state: directory
      recurse: true

  - name: copy fonts
    synchronize:
      src: zsh_files/fonts
      dest: "{{ user_home.stdout_lines }}/.local/share/"

  - name: scan for new fonts
    command: fc-cache -fv ~/.local/share/fonts/

  - name: clone powerlevel9k theme
    git:
      repo: https://github.com/bhilburn/powerlevel9k.git
      dest:  ~/.oh-my-zsh/custom/themes/powerlevel9k
      update: no

  - name: clone docker-machine completion
    git:
      repo: https://github.com/leonhartX/docker-machine-zsh-completion.git
      dest: ~/.oh-my-zsh/custom/plugins/docker-machine
      update: no

  - name: clone fuzzy finder
    git:
      repo: https://github.com/junegunn/fzf.git
      dest: ~/.oh-my-zsh/custom/plugins/fzf
      update: no

  - name: install fuzzy finder
    command: "{{ user_home.stdout_lines }}/.oh-my-zsh/custom/plugins/fzf/install --bin"

  - name: clone fzf-zsh wrapper
    git:
      repo: https://github.com/Treri/fzf-zsh.git
      dest: ~/.oh-my-zsh/custom/plugins/fzf-zsh
      update: no

  - name: clone sdkman zsh plugin
    git:
      repo: https://github.com/nobeans/zsh-sdkman.git
      dest: ~/.oh-my-zsh/custom/plugins/sdkman
      update: no

  - name: clone zsh-autosuggestions
    git:
      repo: https://github.com/zsh-users/zsh-autosuggestions
      dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions

  - name: create folder for flatpak plugin
    file:
      path: "{{ user_home.stdout_lines }}/.oh-my-zsh/custom/plugins/flatpak/"
      state: directory
      mode: 0755

  - name: copy flatpak plugin
    get_url:
      url: https://raw.githubusercontent.com/bilelmoussaoui/flatpak-zsh-completion/master/flatpak/flatpak.plugin.zsh
      dest: "{{ user_home.stdout_lines }}/.oh-my-zsh/custom/plugins/flatpak/"

  - name: clone zsh-syntax-highlighting
    git:
      repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
      dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
      update: no

  - name: Clone custom fonts
    git:
      repo: https://github.com/powerline/fonts.git 
      dest: "{{ user_home.stdout_lines }}/src-hub/fonts"
      depth: 1
      update: no

  - name: Install custom fonts
    shell: "{{ user_home.stdout_lines }}/src-hub/fonts/install.sh"

  - name: Clone stderred, to colour sterred on red
    git:
      repo: https://github.com/sickill/stderred.git
      dest: "{{ user_home.stdout_lines }}/src-hub/stderred"
      update: no

  - name: Install stderred dependencies
    apt: name="{{package}}" state=present
    vars:
      package:
        - build-essential
        - cmake
    become: true

  - name: Build stderred
    make:
      chdir: "{{ user_home.stdout_lines }}/src-hub/stderred"
